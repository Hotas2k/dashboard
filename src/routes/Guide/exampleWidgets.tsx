import { InformationItem } from './Guide';

import { Link } from './Guide.styles';

export const exampleWidgets: InformationItem[] = [
  {
    headline: 'UUID-generator',
    info: 'Skapa och visa ett slumpm칛ssigt genererat UUID',
    extendedInfo:
      'Widgeten skulle vara anv칛ndbar n칛r till exempel nya rader ska l칛ggas till i en databas manuellt. Ut칬kade funktioner kan vara att kunna bulk-generera UUID:s och en knapp som genererar om det visade UUID:t.',
  },
  {
    headline: 'JWT-parser 游뱂',
    info: 'Avkoda JWT-token och visa dess inneh친ll',
    extendedInfo:
      'JWT (JSON Web Token) 칛r en hashad token som anv칛nds f칬r att dela information och autentisera mellan en klient och server. Det kan vara nyttigt att i till exempel buggjakt kunna avkoda en JWT-token f칬r att se hur en klient framst칛ller sig till en server',
  },
  {
    headline: 'Timer',
    info: 'En helt vanlig timer',
    extendedInfo:
      'L칛mplig n칛r man beh칬ver koka 칛gg eller verkligen inte vill missa ett viktigt m칬te. En utmaning h칛r blir att finna ett bra s칛tt att visa f칬r anv칛ndaren att timern n친tt noll, konfettiregn?',
  },
  {
    headline: 'JavaScript array methods',
    info: '"Cheat sheet" f칬r vanliga JavaScript array methods',
    extendedInfo:
      'H칛r avses ex. map, forEach, find, every, reduce, etc. Vilka finns, vad g칬r dem och vilka parametrar 칛r tillg칛ngliga? Vilken information som 칛r relevant och hur den ska visas 칛r upp till den som v칛ljer att implementera. Ett exempel kan vara att visa varje array method i en dropdown och beroende p친 val rendera valets specifika information',
  },
  {
    headline: 'Google search',
    info: 'Skriv in s칬kning och l칛nkas till svaren',
    extendedInfo:
      'Utvecklarens b칛sta v칛n? En widget d칛r anv칛ndaren kan skriva in sin google s칬kning och l칛nkas fram till resultatet',
  },
  {
    headline: 'TypeScript playground 游뱂',
    info: 'Exekvera kod hos klienten',
    extendedInfo:
      'Skapa en TypeScript REPL d칛r man kan testa kodsnuttar. Vad blir egentligen 0.1 + 0.2? Som minst kr칛vs ett inputf칛lt och n친got som kan l칛sa och exekvera vad som skrivits. Ytterligare stilpo칛ng p친 en redan sv친r uppgift 칛r att implementera syntax highlighting och code completion',
  },
  {
    headline: 'V칛der',
    info: 'En v칛derwidget',
    extendedInfo:
      'Visa v칛der eller temperatur i n친gon form med hj칛lp av tillg칛ngliga API:er. H칛r kan du till exempel l칛sa ut var anv칛ndaren sitter och visa aktuell temperatur. En annan implementering skulle kunna visa morgondagens v칛der i Samarkand.',
  },
  {
    headline: 'Klocka',
    info: 'En klocka',
    extendedInfo:
      'F칬r en extra utmaning visa vad klockan 칛r p친 andra platser 칛n i Sverige.',
  },
  {
    headline: 'TypeScript Cheat Sheet',
    info: 'Fusklapp till TypeScript syntax',
    extendedInfo:
      'P친 bland annat TypeScripts hemsida finns det f칛rdiga fusklappar i bildformat. S친dana g친r att anv칛nda, till exempel genom att f칬rst visa tumnaglar och f칬rstora bilderna vid klick. En annan l칬sning vore att skriva exempel f칬r hand och d친 ta hj칛lp av ett library f칬r syntax highlighting',
  },
  {
    headline: 'Kattbilder',
    info: 'Slumpa fram bilder p친 katter!',
    extendedInfo: (
      <>
        Ska man h칛mta en ny katt med tidsintervall eller knapptryck? Ett m칬jligt
        API finns p친{' '}
        <Link href="https://developers.thecatapi.com">
          developers.thecatapi.com
        </Link>
      </>
    ),
  },
];
